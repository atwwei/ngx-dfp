{"version":3,"file":"dfp-refresh.service.js","sourceRoot":"","sources":["../../src/service/dfp-refresh.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, EventEmitter, Optional, Injector, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\nimport { Subscription } from 'rxjs';\nimport { timer } from 'rxjs/observable/timer';\nimport { from } from 'rxjs/observable/from';\n\nimport { DfpConfig, DFP_CONFIG } from '../class';\nimport { ParseDurationService } from './parse-duration.service';\n\nclass DFPRefreshError extends Error { }\n\ndeclare var googletag;\n\n@Injectable()\nexport class DfpRefreshService {\n\n  refreshEvent: EventEmitter<any> = new EventEmitter();\n  private refreshSlots = [];\n  private singleRequest: Subscription;\n  private intervals = {};\n\n  constructor(\n    @Optional() @Inject(DFP_CONFIG)\n    private config: DfpConfig,\n    private inject: Injector,\n    private parseDuration: ParseDurationService\n  ) { }\n\n  slotRefresh(slot, refreshInterval?, initRefresh = false) {\n    const deferred: Promise<any> = from([slot]).toPromise(),\n      task = { slot: slot, deferred: deferred };\n\n    deferred.then(() => {\n      if (this.hasSlotInterval(slot)) {\n        this.cancelInterval(slot);\n      }\n      if (refreshInterval) {\n        this.addSlotInterval(task, refreshInterval);\n      }\n    });\n\n    if (this.config.singleRequestMode === true && initRefresh) {\n      // Use a timer to handle refresh of a single request mode\n      this.refreshSlots.push(slot);\n      if (this.singleRequest && !this.singleRequest.closed) {\n        this.singleRequest.unsubscribe();\n      }\n      this.singleRequest = timer(100).subscribe(() => {\n        const pubads = googletag.pubads();\n        pubads.enableSingleRequest();\n        googletag.enableServices();\n        this.refreshSlots.forEach(s => {\n          googletag.display(s.getSlotElementId());\n        });\n        pubads.refresh(this.refreshSlots);\n        this.refreshSlots = [];\n      });\n    } else {\n      googletag.display(slot.getSlotElementId());\n      this.refresh([task]);\n    }\n\n    return deferred;\n  }\n\n  cancelInterval(slot) {\n    if (!this.hasSlotInterval(slot)) {\n      throw new DFPRefreshError('No interval for given slot');\n    }\n\n    const interval: Subscription = this.intervals[this.slotIntervalKey(slot)];\n    interval.unsubscribe();\n    delete this.intervals[slot];\n\n    return this;\n  }\n\n  private hasSlotInterval(slot) {\n    return this.slotIntervalKey(slot) in this.intervals;\n  }\n\n  private refresh(tasks?) {\n    if (tasks === undefined) {\n      googletag.cmd.push(() => {\n        googletag.pubads().refresh();\n      });\n      return;\n    }\n\n    if (tasks.length === 0) { return false; }\n\n    googletag.cmd.push(() => {\n      googletag.pubads().refresh(tasks.map(task => task.slot));\n      tasks.forEach(task => {\n        Promise.resolve(task.slot);\n      });\n    });\n  }\n\n  private addSlotInterval(task, interval) {\n    const parsedInterval = this.parseDuration.parseDuration(interval);\n    this.validateInterval(parsedInterval, interval);\n\n    const refresh = timer(parsedInterval, parsedInterval).subscribe(() => {\n      const doc = this.inject.get(DOCUMENT);\n      if (!this.hiddenCheck(doc.getElementById(task.slot.getSlotElementId()))) {\n        this.refresh([task]);\n        this.refreshEvent.emit(task.slot);\n      }\n    });\n\n    this.intervals[this.slotIntervalKey(task.slot)] = refresh;\n\n    return refresh;\n  }\n\n  private slotIntervalKey(slot) {\n    return slot.getSlotId().getDomId();\n  }\n\n  private validateInterval(milliseconds, beforeParsing) {\n    if (milliseconds < 1000) {\n      console.warn('Careful: ${beforeParsing} is quite a low interval!');\n    }\n  }\n\n  hiddenCheck(element: Element) {\n    if (typeof (window) !== 'undefined') {\n      const css = window.getComputedStyle(element);\n      if (css.display === 'none') {\n        return true;\n      } else if (element.parentElement) {\n        return this.hiddenCheck(element.parentElement);\n      }\n    }\n    return false;\n  }\n}\n"]}