{"version":3,"file":"dfp-id-generator.service.js","sourceRoot":"","sources":["../../src/service/dfp-id-generator.service.ts"],"names":[],"mappings":";;AAAA,sCAA2C;AAE3C;IAAA;QAGU,iBAAY,GAAG,EAAE,CAAC;IAkC5B,CAAC;IAhCC,0CAAU,GAAV;QACE,IAAI,EAAE,GAAG,IAAI,CAAC;QAEd,GAAG,CAAC;YACF,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACjD,EAAE,GAAG,SAAS,GAAG,MAAM,CAAC;QAC1B,CAAC,QAAQ,EAAE,IAAI,IAAI,CAAC,YAAY,EAAE;QAElC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;QAE7B,MAAM,CAAC,EAAE,CAAC;IACZ,CAAC;IAED,8CAAc,GAAd,UAAe,OAAO;QACpB,EAAE,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC,OAAO,CAAC,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAChE,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC;QACpB,CAAC;QAED,IAAM,EAAE,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAC7B,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAAC,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC;QAAC,CAAC;QAEjC,MAAM,CAAC,EAAE,CAAC;IACZ,CAAC;IAED,uCAAO,GAAP,UAAQ,EAAE;QACR,MAAM,CAAC,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC;IACjC,CAAC;IAED,wCAAQ,GAAR,UAAS,EAAE;QACT,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAC3B,CAAC;;gBAnCF,iBAAU;;IAqCX,4BAAC;CAAA,AArCD,IAqCC;AApCY,sDAAqB","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DfpIDGeneratorService {\n\n  private generatedIDs = {};\n\n  generateID() {\n    let id = null;\n\n    do {\n      const number = Math.random().toString().slice(2);\n      id = 'gpt-ad-' + number;\n    } while (id in this.generatedIDs);\n\n    this.generatedIDs[id] = true;\n\n    return id;\n  }\n\n  dfpIDGenerator(element) {\n    if (element && element.id && !(element.id in this.generatedIDs)) {\n      return element.id;\n    }\n\n    const id = this.generateID();\n    if (element) { element.id = id; }\n\n    return id;\n  }\n\n  isTaken(id) {\n    return id in this.generatedIDs;\n  }\n\n  isUnique(id) {\n    return !this.isTaken(id);\n  }\n\n}\n"]}