{"version":3,"file":"idle.service.js","sourceRoot":"","sources":["../../src/service/idle.service.ts"],"names":[],"mappings":";;AAAA,sCAAwE;AACxE,0CAAoD;AAEpD;IAKE,qBACuB,UAAkB,EACvC,IAAY;QAEZ,IAAM,GAAG,GAAQ,0BAAiB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC;QAC7D,EAAE,CAAC,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,mBAAmB,GAAG,UAAC,GAAG;gBAC7B,MAAM,CAAC,GAAG,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;YACtC,CAAC,CAAC;QACJ,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,mBAAmB,GAAG,UAAC,GAAG;gBAC7B,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,cAAM,OAAA,GAAG,CAAC,UAAU,CAAC,GAAG,EAAE,EAAE,CAAC,EAAvB,CAAuB,CAAC,CAAC;YAC/D,CAAC,CAAC;QACJ,CAAC;IACH,CAAC;IAED,6BAAO,GAAP,UAAQ,GAAG;QACT,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;IAChC,CAAC;;gBAvBF,iBAAU;;;;gBAM0B,MAAM,uBAAtC,aAAM,SAAC,kBAAW;gBATF,aAAM;;IA4B3B,kBAAC;CAAA,AAzBD,IAyBC;AAxBY,kCAAW","sourcesContent":["import { Injectable, NgZone, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable()\nexport class IdleService {\n\n  private requestIdleCallback: any;\n\n  constructor(\n    @Inject(PLATFORM_ID) platformId: Object,\n    zone: NgZone\n  ) {\n    const win: any = isPlatformBrowser(platformId) ? window : {};\n    if (win.requestIdleCallback) {\n      this.requestIdleCallback = (fun) => {\n        return win.requestIdleCallback(fun);\n      };\n    } else {\n      this.requestIdleCallback = (fun) => {\n        return zone.runOutsideAngular(() => win.setTimeout(fun, 50));\n      };\n    }\n  }\n\n  request(fun) {\n    this.requestIdleCallback(fun);\n  }\n\n}\n"]}