{"version":3,"file":"dfp-errors.class.js","sourceRoot":"","sources":["../../src/class/dfp-errors.class.ts"],"names":[],"mappings":";;;;;;;;;;;;AAEA;IAAwC,sCAAK;IACzC,4BAAY,aAAa,EAAE,WAAW,EAAE,WAAY;eAChD,kBAAM,+BAA6B,aAAa,QAAK;aACjD,cAAW,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,iBAAiB,OAAG,CAAA;aAC3D,MAAI,WAAW,OAAI,CAAA,CAAC;IAC5B,CAAC;IACL,yBAAC;AAAD,CAAC,AAND,CAAwC,KAAK,GAM5C;AANY,gDAAkB;AAQ/B;IAAkC,gCAAK;IACnC,sBAAY,aAAa,EAAE,aAAa,EAAE,UAAU,EAAE,YAAY;eAC9D,kBACI,+BAA6B,aAAa,UAAO;aACjD,gBAAc,aAAa,oBAAe,YAAc,CAAA;aACxD,WAAS,OAAO,UAAY,CAAA,CAC/B;IACL,CAAC;IACL,mBAAC;AAAD,CAAC,AARD,CAAkC,KAAK,GAQtC;AARY,oCAAY;AAUzB;IAA2C,yCAAK;IAC5C,+BAAY,aAAa;QAAE,iBAAU;aAAV,UAAU,EAAV,qBAAU,EAAV,IAAU;YAAV,gCAAU;;QAArC,iBAoBC;QAnBG,OAAO,CAAC,MAAM,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC9C,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5B,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;QACzB,CAAC;QAED,IAAI,aAAa,CAAC;QAClB,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACrB,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,MAAI,CAAC,MAAG,EAAR,CAAQ,CAAC,CAAC;YACrC,aAAa,GAAG,kBAAkB,CAAC;YACnC,aAAa,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACjD,aAAa,IAAI,SAAO,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAG,CAAC;QAC1D,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,aAAa,GAAG,OAAK,OAAO,CAAC,CAAC,CAAC,MAAG,CAAC;QACvC,CAAC;QAED,QAAA,kBACI,qBAAmB,aAAa,kBAAe;aAC/C,6BAA2B,aAAa,MAAG,CAAA,CAC9C,SAAC;;IACN,CAAC;IACL,4BAAC;AAAD,CAAC,AAtBD,CAA2C,KAAK,GAsB/C;AAtBY,sDAAqB","sourcesContent":["\n\nexport class DFPIncompleteError extends Error {\n    constructor(directiveName, missingName, isAttribute?) {\n        super(`Incomplete definition of '${directiveName}': ` +\n            `Missing ${isAttribute ? 'attribute' : 'child directive'} ` +\n            `'${missingName}'.`);\n    }\n}\n\nexport class DFPTypeError extends Error {\n    constructor(directiveName, attributeName, wrongValue, expectedType) {\n        super(\n            `Wrong type for attribute '${attributeName}' on ` +\n            `directive '${directiveName}': Expected ${expectedType}` +\n            `, got ${typeof wrongValue}`\n        );\n    }\n}\n\nexport class DFPMissingParentError extends Error {\n    constructor(directiveName, ...parents) {\n        console.assert(parents && parents.length > 0);\n        if (Array.isArray(parents[0])) {\n            parents = parents[0];\n        }\n\n        let parentMessage;\n        if (parents.length > 1) {\n            parents = parents.map(p => `'${p}'`);\n            parentMessage = ', which must be ';\n            parentMessage += parents.slice(0, -1).join(', ');\n            parentMessage += ` or ${parents[parents.length - 1]}`;\n        } else {\n            parentMessage = ` '${parents[0]}'`;\n        }\n\n        super(\n            `Invalid use of '${directiveName}' directive. ` +\n            `Missing parent directive${parentMessage}.`\n        );\n    }\n}\n"]}